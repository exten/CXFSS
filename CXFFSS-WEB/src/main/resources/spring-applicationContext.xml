<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!-- 开启springMVC注解扫描 -->
    <mvc:annotation-driven/>
    <!--<mvc:default-servlet-handler/>-->
    <!-- 启用自动注解，使@Resource、@PostConstruct、@PreDestory、@Autowired四个注解生效 -->
    <context:annotation-config/>

    <!-- Spring MVC 配置 需要 web.xml 类加载SpringMVC的类和配置 才可使用

        <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
          <param-name>contextConfigLocation</param-name>
          <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
      </servlet>
    -->
    <!--<context:component-scan base-package="*"/>-->
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.it.h2.**"/>

    <!-- CXF框架导入 启用CXF -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <!--  导入各模块的spring配置文件 -->
    <import resource="classpath*:**/spring-mybatis.xml"/>
    <import resource="classpath*:**/spring-beans.xml"/>


    </beans>